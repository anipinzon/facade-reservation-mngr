version: '3.9'

services:
  postgresql:
    image: docker.io/bitnami/postgresql:11
    container_name: postgresql
    restart: always
    volumes:
      - postgresql_data:/bitnami/postgresql
    environment:
      - POSTGRESQL_USERNAME=kong
      - POSTGRESQL_PASSWORD=bitnami
      - POSTGRESQL_DATABASE=kong
    networks:
      - rentail-application
  
  mysql:
    image: mysql
    restart: always
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_DATABASE: bd-cars
      MYSQL_USER: db_application
      MYSQL_PASSWORD: superSecret
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - rentail-application
 
      
  mongodb:
    image: mongo
    restart: always
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_USERNAME: db_application
      MONGO_INITDB_PASSWORD: superSecret
      MONGO_INITDB_DATABASE: bd-rental
    networks:
      - rentail-application
     
  reservation:
    restart: always
    container_name: reservation
    image: nicolasdockerbdb/facade-reservation-mngr:0.0.17.1-SNAPSHOT
    ports:
      - 8080:8080
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://root:example@mongodb:27017/admin
    networks:
      - rentail-application
    depends_on:
      - kong
      - mongodb
      
  kong:
    image: docker.io/bitnami/kong:2.6.0
    container_name: kong
    restart: always
    ports:
      - "8000:8000"
      - "8001:8001"
    environment:
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_MIGRATE: "yes"
      KONG_DATABAS: postgres
      KONG_PG_DATABASE: kong
      KONG_PG_HOST: postgresql
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: bitnami
      KONG_ADMIN_LISTEN: "0.0.0.0:8001"
    networks:
      - rentail-application
    depends_on:
      - postgresql
      
  konga:
    image: pantsel/konga
    container_name: konga
    restart: always
    ports:
      - 1337:1337
    environment:
      NODE_ENV: production
    networks:
      - rentail-application
    depends_on:
      - kong
      
      
volumes:
  postgresql_data:
    driver: local
  mysql_data:
    driver: local
    
networks:
    rentail-application:
        driver: bridge
        
        